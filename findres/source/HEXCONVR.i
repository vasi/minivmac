/*	HEXCONVR.i	Copyright (C) 2008 Paul C. Pratt	You can redistribute this file and/or modify it under the terms	of version 2 of the GNU General Public License as published by	the Free Software Foundation.  You should have received a copy	of the license along with this file; see the file COPYING.	This file is distributed in the hope that it will be useful,	but WITHOUT ANY WARRANTY; without even the implied warranty of	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the	license for more details.*//*	HEXadecimal CONVeRsion*/LOCALVAR const MyCharR hexdv[] = "0123456789ABCDEF";LOCALPROC Uimr2Hex(uimr v, ps3p s){	/* no leading zeros */	MyCharR *p = PStrToMyCharPtr(s);	do {		*p++ = hexdv[ModPow2(v, 4)];		v >>= 4;	} while (v != 0);	s[0] = p - PStrToMyCharPtr(s);	ReversePStr(s);}LOCALPROC PStrApndUimr2Hex(ps3p s, uimr v){	MyPStr t;	Uimr2Hex(v, t);	PStrAppend(s, t);}LOCALPROC PStrApndSimr2Hex(ps3p s, simr v){	if (v < 0) {		v = - v;		PStrApndChar(s, '-');	}	PStrApndUimr2Hex(s, v);}LOCALFUNC blnr PStrIsHexNumber(ps3p s){	si4r i;	MyCharR c1;	MyCharPtr p = s;	MyCharR n = *p++;	for (i = n; --i >= 0; ) {		c1 = *p++;		if (! (((c1 >= '0') && (c1 <= '9'))			|| ((c1 >= 'A') && (c1 <= 'F'))			|| ((c1 >= 'a') && (c1 <= 'f'))))		{			return falseblnr;		}	}	return trueblnr;}LOCALFUNC uimr Hex2Uimr(ps3p s){	short i;	MyCharR c1;	MyCharPtr p = s;	MyCharR n = *p++;	uimr v = 0;	for (i = n; --i >= 0; ) {		v <<= 4;		c1 = *p++;		if ((c1 >= '0') && (c1 <= '9')) {			v += c1 - '0';		} else if ((c1 >= 'A') && (c1 <= 'F')) {			v += c1 - ('A' - 10);		} else if ((c1 >= 'a') && (c1 <= 'f')) {			v += c1 - ('a' - 10);		}	}	return v;}#define Have_HEXCONVR 1