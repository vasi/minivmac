/*	APPLMAIN.c	Copyright (C) 2007 Paul C. Pratt	You can redistribute this file and/or modify it under the terms	of version 2 of the GNU General Public License as published by	the Free Software Foundation.  You should have received a copy	of the license along with this file; see the file COPYING.	This file is distributed in the hope that it will be useful,	but WITHOUT ANY WARRANTY; without even the implied warranty of	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the	license for more details.*//*	APPLication MAIN*/LOCALFUNC tMyErr PickDst(	MyDir_R *src_d, StringPtr src_s,	MyDir_R *dst_d, StringPtr dst_s){#pragma unused(src_d)	Str255 dst0_s;	PStrCopy(dst0_s, src_s);	if (PStrLength(dst0_s) > 27) {		PStrLength(dst0_s) = 27;	}	PStrAppend(dst0_s, "\p.sit");	return MyFilePutNew_v2((StringPtr)"\pOutput File",		dst0_s, dst_d, dst_s);}LOCALFUNC tMyErr DoFilter2(void){	tMyErr err;	MyDir_R src_d;	Str255 src_s;	MyDir_R dst_d;	Str255 dst_s;	blnr IsOk = falseblnr;	GetInputFile(&src_d, src_s);	if (noErr == (err = PickDst(&src_d, src_s, &dst_d, dst_s)))	if (noErr == (err = sitlib_WriteFile_v2(		&src_d, src_s,		&dst_d, dst_s)))	{	}	return err;}LOCALPROC ProgramMain(void){	vCheckSysErr(ProgressBar_SetStage_v2("Ready for a folder to archive\311", 0));label_1:	WaitForInput();	if (GotInputCur) {		if (! CheckSysErr(DoFilter2())) {			ClearInputA();			vCheckSysErr(ProgressBar_SetStage_v2("Aborted, ready for another file\311", 0));		} else {			vCheckSysErr(ProgressBar_SetStage_v2("Done, ready for another file\311", 0));		}		CloseInputCur();		goto label_1;	}}LOCALPROC ProgramZapVars(void){}LOCALPROC ProgramPreInit(void){	OneWindAppPreInit();}LOCALFUNC blnr ProgramInit(void){	if (CheckSysErr(MyMemory_Init_v2()))	if (CheckSysErr(OneWindAppInit_v2()))	{		return trueblnr;	}	return falseblnr;}LOCALPROC ProgramUnInit(void){	OneWindAppUnInit();	MyMemory_UnInit();}int main(void){	ProgramZapVars();	ProgramPreInit();	if (ProgramInit()) {		ProgramMain();	}	ProgramUnInit();	return 0;}