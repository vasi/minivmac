;	AllTests.a;;	Copyright (C) 2007 Paul C. Pratt;;	You can redistribute this file and/or modify it under the terms;	of version 2 of the GNU General Public License as published by;	the Free Software Foundation.  You should have received a copy;	of the license along with this file; see the file COPYING.;;	This file is distributed in the hope that it will be useful,;	but WITHOUT ANY WARRANTY; without even the implied warranty of;	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the;	license for more details.		STRING     PASCAL;		_ExitToShell: OPWORD $A9F4		_Debugger: OPWORD $A9FF	IMPORT BrCondTests	IMPORT CmpTests	IMPORT TstTests	IMPORT MoveTests	IMPORT SubTests	IMPORT AddTests	IMPORT AddXTests	IMPORT SubXTests	IMPORT AndTests	IMPORT OrTests	IMPORT EorTests	IMPORT AslTestsMsgExit PROC EXPORT	MOVE.L	A0,D0	UNLK	A6	MOVEM.L	(A7)+,D2-D7/A2-A5	RTS	ENDPROCDoOneTest	PROC EXPORT	MOVE.L	D0, D7	MOVE	D1, CCR	JSR	(A1)	MOVE	SR, D2	CMP.L	D4, D7	BNE	@3	MOVE	D1, D7	AND.B	D5, D7	EOR.B	D3, D7	CMP.B	D7, D2	BEQ	@4@3	JMP	MsgExit@4	RTS	ENDPROCBraTests	PROC	BRA.W	@1	LEA	#'BRA.W fails',A0	JMP	MsgExit@1	BRA.S	@2	LEA	#'BRA.S fails',A0	JMP	MsgExit	RTS@2	BRA.W	@3@5	RTS@4	BRA.S	@5	LEA	#'backwards BRA.S fails',A0	JMP	MsgExit@3	BRA.W	@4	LEA	#'backwards BRA.W fails',A0	JMP	MsgExit	ENDPROCCmpEqTests	PROC	MOVEQ	#1, D0	MOVEQ	#2, D1	CMP.B	D0, D1	BEQ	@3	CMP.W	D0, D1	BEQ	@3	CMP.L	D0, D1	BEQ	@3	MOVEQ	#1, D0	MOVEQ	#1, D1	CMP.B	D0, D1	BNE	@3	CMP.W	D0, D1	BNE	@3	CMP.L	D0, D1	BNE	@3	MOVE.L	#$3F400037, D0	MOVE.L	#$3F400137, D1	CMP.B	D0, D1	BNE	@3	CMP.W	D0, D1	BEQ	@3	CMP.L	D0, D1	BEQ	@3	MOVE.L	#$3F400037, D0	MOVE.L	#$3F408037, D1	CMP.B	D0, D1	BNE	@3	CMP.W	D0, D1	BEQ	@3	CMP.L	D0, D1	BEQ	@3	MOVE.L	#$00005337, D0	MOVE.L	#$00015337, D1	CMP.B	D0, D1	BNE	@3	CMP.W	D0, D1	BNE	@3	CMP.L	D0, D1	BEQ	@3	MOVE.L	#$00005337, D0	MOVE.L	#$80005337, D1	CMP.B	D0, D1	BNE	@3	CMP.W	D0, D1	BNE	@3	CMP.L	D0, D1	BEQ	@3	RTS@3	LEA	#'CMP Eq Fails',A0	JMP	MsgExit	ENDPROCMoveCCRTests	PROC	MOVEQ	#0, D1	BCLR	#4, D1	BSR	@7	BSET	#4, D1@7	BCLR	#3, D1	BSR	@6	BSET	#3, D1@6	BCLR	#2, D1	BSR	@5	BSET	#2, D1@5	BCLR	#1, D1	BSR	@4	BSET	#1, D1@4	BCLR	#0, D1	BSR	@2	BSET	#0, D1@2	MOVE	D1, CCR	MOVE	SR, D0	CMP.B	D0,D1	BNE	@3	RTS@3	LEA	#'Move CCR Fails',A0	JMP	MsgExit	ENDPROCTestForEachInitCond PROC	MOVEQ	#0, D1	BCLR	#4, D1	BSR	@7	BSET	#4, D1@7	BCLR	#3, D1	BSR	@6	BSET	#3, D1@6	BCLR	#2, D1	BSR	@5	BSET	#2, D1@5	BCLR	#1, D1	BSR	@4	BSET	#1, D1@4	BCLR	#0, D1	BSR	@2	BSET	#0, D1@2	LEA	DoOneTest, A2	JSR	CmpTests	JSR	TstTests	JSR	MoveTests	JSR	SubTests	JSR	AddTests	JSR	AddXTests	JSR	SubXTests	JSR AndTests	JSR OrTests	JSR EorTests	JSR AslTests	RTS	ENDPROCDoTest PROC EXPORT	MOVEM.L	D2-D7/A2-A5,-(A7)	LINK	A6,#0	JSR	BraTests	JSR	BrCondTests	JSR	CmpEqTests	JSR	MoveCCRTests	JSR	TestForEachInitCond	LEA	#'Seems Ok',A0	JMP	MsgExit	ENDPROC		END