;	TstTests.a;;	Copyright (C) 2004 Paul Pratt;;	You can redistribute this file and/or modify it under the terms;	of version 2 of the GNU General Public License as published by;	the Free Software Foundation.  You should have received a copy;	of the license along with this file; see the file COPYING.;;	This file is distributed in the hope that it will be useful,;	but WITHOUT ANY WARRANTY; without even the implied warranty of;	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the;	license for more details.	IMPORT MsgExitMoveBTests	PROC; zero	MOVEQ	#$04, D3	MOVEQ	#0, D0	MOVE.L	#$34567878, D2	MOVE.L	#$34567800, D4	BSR	@8	MOVE.L	#$FFFFFF00, D0	MOVE.L	#$12345678, D2	MOVE.L	#$12345600, D4	BSR	@8; positive	MOVEQ	#$00, D3	MOVEQ	#1, D0	MOVE.L	#$21654387, D2	MOVE.L	#$21654301, D4	BSR	@8	MOVEQ	#$7F, D0	MOVE.L	#$86574321, D2	MOVE.L	#$8657437F, D4	BSR	@8	MOVE.L	#$FFFFFF7F, D0	MOVE.L	#$87654321, D2	MOVE.L	#$8765437F, D4	BSR	@8; negative	MOVEQ	#$08, D3	MOVEQ	#-128, D0	MOVE.L	#$15487632, D2	MOVE.L	#$15487680, D4	BSR	@8	MOVEQ	#-1, D0	MOVE.L	#$13254876, D2	MOVE.L	#$132548FF, D4	BSR	@8	MOVE.L	#$00000080, D0	MOVE.L	#$18765432, D2	MOVE.L	#$18765480, D4	BSR	@8	RTS@8	MOVE	D1, CCR	MOVE.B	D0, D2	MOVE	SR, D0	CMP.L	D4, D2	BNE	@3	MOVE	D0, D2	AND.B	#$0F, D2	CMP.B	D3, D2	BNE	@3	EOR	D1, D0	AND.B	#$F0, D0	BNE	@3	RTS@3	LEA	#'MOVE.B Fails',A0	JMP	MsgExit	ENDPROCMoveWTests	PROC; zero	MOVEQ	#$04, D3	MOVEQ	#0, D0	MOVE.L	#$34567878, D2	MOVE.L	#$34560000, D4	BSR	@8	MOVE.L	#$FFFF0000, D0	MOVE.L	#$12345678, D2	MOVE.L	#$12340000, D4	BSR	@8; positive	MOVEQ	#$00, D3	MOVEQ	#1, D0	MOVE.L	#$21654387, D2	MOVE.L	#$21650001, D4	BSR	@8	MOVEQ	#127, D0	MOVE.L	#$86574321, D2	MOVE.L	#$8657007F, D4	BSR	@8	MOVE.L	#$FFFF7FFF, D0	MOVE.L	#$87654321, D2	MOVE.L	#$87657FFF, D4	BSR	@8; negative	MOVEQ	#$08, D3	MOVEQ	#-128, D0	MOVE.L	#$15487632, D2	MOVE.L	#$1548FF80, D4	BSR	@8	MOVEQ	#-1, D0	MOVE.L	#$93254876, D2	MOVE.L	#$9325FFFF, D4	BSR	@8	MOVE.L	#$00008000, D0	MOVE.L	#$18765432, D2	MOVE.L	#$18768000, D4	BSR	@8	RTS@8	MOVE	D1, CCR	MOVE.W	D0, D2	MOVE	SR, D0	CMP.L	D4, D2	BNE	@3	MOVE	D0, D2	AND.B	#$0F, D2	CMP.B	D3, D2	BNE	@3	EOR	D1, D0	AND.B	#$F0, D0	BNE	@3	RTS@3	LEA	#'MOVE.W Fails',A0	JMP	MsgExit	ENDPROCMoveLTests	PROC; zero	MOVEQ	#$04, D3	MOVEQ	#0, D0	MOVE.L	#$34567878, D2	BSR	@8; positive	MOVEQ	#$00, D3	MOVEQ	#1, D0	MOVE.L	#$21654387, D2	BSR	@8	MOVEQ	#127, D0	MOVE.L	#$86574321, D2	BSR	@8	MOVE.L	#$7FFFFFFF, D0	MOVE.L	#$87654321, D2	BSR	@8; negative	MOVEQ	#$08, D3	MOVEQ	#-128, D0	MOVE.L	#$15487632, D2	BSR	@8	MOVEQ	#-1, D0	MOVE.L	#$93254876, D2	BSR	@8	MOVE.L	#$80000000, D0	MOVE.L	#$18765432, D2	BSR	@8	RTS@8	MOVE	D1, CCR	MOVE.L	D0, D2	MOVE	SR, D4	CMP.W	D0, D2	BNE	@3	MOVE	D4, D0	AND.B	#$0F, D4	CMP.B	D3, D4	BNE	@3	EOR	D1, D0	AND.B	#$F0, D0	BNE	@3	RTS@3	LEA	#'MOVE.L Fails',A0	JMP	MsgExit	ENDPROCMoveTests PROC EXPORT	JSR	MoveBTests	JSR	MoveWTests	JSR	MoveLTests	RTS	ENDPROC		END